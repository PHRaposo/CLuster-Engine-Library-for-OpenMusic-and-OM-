
(:patch
 (:name "009d-polyphonic-rhythm-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 23:03:25")
  (:modified "2021/07/12 23:05:46")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1090 568)) (:position (84 115)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (664 669)) (:position (109 43)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 29)
       (:y 431)
       (:w 500)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 105)
       (:y 302)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 1))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 82)
       (:y 337)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 449)
       (:y 305)
       (:w 76)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 500 700))
       (:id 3))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 398)
       (:y 344)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 275)
       (:y 311)
       (:w 76)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 400 800))
       (:id 5))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 238)
       (:y 346)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 48)
       (:y 197)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 292)
       (:y 197)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference third)
       (:group-id nil)
       (:name "third")
       (:x 28)
       (:y 107)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 66)
       (:y 146)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 269)
       (:y 98)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 309)
       (:y 143)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 245)
       (:y 530)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 248)
       (:y 2)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 1))))))
   (:group-id nil)
   (:name "patch 2")
   (:x 463)
   (:y 9)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 4")
   (:x 401)
   (:y 44)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 1")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (496 542)) (:position (212 49)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 118)
       (:y 354)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference not)
       (:group-id nil)
       (:name "not")
       (:x 130)
       (:y 415)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference last-elem)
       (:group-id nil)
       (:name "last-elem")
       (:x 47)
       (:y 277)
       (:w 89)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference butlast)
       (:group-id nil)
       (:name "butlast")
       (:x 189)
       (:y 275)
       (:w 75)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "MIDICS-TO-PCS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "midics-to-pcs")
       (:x 98)
       (:y 179)
       (:w 115)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 148)
       (:y 85)
       (:w 34)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 5))
      (:box
       (:type :function)
       (:reference last)
       (:group-id nil)
       (:name "last")
       (:x 127)
       (:y 120)
       (:w 57)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "n")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 119)
       (:y 474)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 120)
       (:y 9)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0))))))
   (:group-id nil)
   (:name "patch 1")
   (:x 304)
   (:y 9)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 600)
   (:y 83)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :all)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 3")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (105 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om>=)
       (:group-id nil)
       (:name "om>=")
       (:x 243)
       (:y 202)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 298)
       (:y 105)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 179)
       (:y 106)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 231)
       (:y 276)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 240)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "patch 3")
   (:x 590)
   (:y 10)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 4))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 473)
   (:y 81)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :all)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :p_d_offs)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCHES-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitches-one-voice")
   (:x 324)
   (:y 82)
   (:w 141)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :all-pitches)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 462)
   (:y 173)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 555)
   (:y 206)
   (:w 179)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/4)
     (:list 1/16)
     (:list 1/8)
     (:list 3/16)
     (:list 3/8)))
   (:id 8))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 745)
   (:y 159)
   (:w 291)
   (:h 87)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 250))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 5750)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6100)
         (:list 6200)
         (:list 6300)
         (:list 6400)
         (:list 6500)
         (:list 6600)
         (:list 6700)
         (:list 6800)
         (:list 6900)
         (:list 7000)
         (:list 7100)
         (:list 7200)
         (:list 7300)
         (:list 7400)
         (:list 7500)
         (:list 7600)
         (:list 7700)
         (:list 7800)
         (:list 7900)))
       (:lonset
        (:list
         0
         250
         500
         750
         1000
         1250
         1500
         1750
         2000
         2250
         2500
         2750
         3000
         3250
         3500
         3750
         4000
         4250
         4500
         4750
         5750))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 9))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 922)
   (:y 57)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 889)
   (:y 26)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 854)
   (:y 55)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 12))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 871)
   (:y 88)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 327)
   (:y 371)
   (:w 627)
   (:h 167)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 667 13.0)
      (:list 1000 18.5)
      (:list 1167 22.925)
      (:list 1333 27.349999)
      (:list 1667 30.974999)
      (:list 1833 34.6)
      (:list 2000 38.225)
      (:list 2167 42.649998)
      (:list 2667 54.324997)
      (:list 2833 59.199997)
      (:list 3000 62.824997)
      (:list 3167 66.45)
      (:list 3333 70.875)
      (:list 4000 77.175)
      (:list 4333 83.475006)
      (:list 4500 87.90001)
      (:list 4667 92.32501)
      (:list 4833 95.95001)
      (:list 5333 106.82501)
      (:list 5500 120.32501)
      (:list 6000 125.20001)
      (:list 6500 130.07501)
      (:list 6667 133.70001)
      (:list 7000 136.82501)
      (:list 7333 141.07501))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 5332)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              3
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 2 1 1))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1 1 1))
                 1
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1.0 3))))
               (:list (:list 4 4) (:list -4)))))
            (:lmidic
             (:list
              (:list 6600)
              (:list 6700)
              (:list 7200)
              (:list 7500)
              (:list 7400)
              (:list 7700)
              (:list 7100)
              (:list 7000)
              (:list 6800)
              (:list 6400)
              (:list 6900)
              (:list 7300)
              (:list 7800)
              (:list 7900)))
            (:lonset
             (:list
              0
              667
              1000
              1167
              1667
              1833
              2167
              2833
              3000
              3167
              3333
              4333
              4500
              4833
              8000))
            (:ldur
             (:list
              (:list 666)
              (:list 332)
              (:list 166)
              (:list 499)
              (:list 165)
              (:list 333)
              (:list 665)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 999)
              (:list 166)
              (:list 332)
              (:list 499)))
            (:lvel (:list 80))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 6999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              3
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 3.0 1))
                 1
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 -1))
                 -1)))))
            (:lmidic
             (:list
              (:list 6200)
              (:list 6400)
              (:list 6700)
              (:list 6900)
              (:list 6300)
              (:list 6000)
              (:list 6100)
              (:list 6500)
              (:list 7000)
              (:list 7100)
              (:list 6600)
              (:list 6800)))
            (:lonset
             (:list
              0
              1000
              1167
              1833
              2167
              3167
              3333
              4333
              4500
              4833
              5500
              6500
              8000))
            (:ldur
             (:list
              (:list 999)
              (:list 166)
              (:list 665)
              (:list 333)
              (:list 999)
              (:list 165)
              (:list 999)
              (:list 166)
              (:list 332)
              (:list 666)
              (:list 999)
              (:list 499)))
            (:lvel (:list 80))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 14))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 553)
   (:y 279)
   (:w 120)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 14)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:comment
   (:x 10)
   (:y 39)
   (:w 305)
   (:h 113)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "POLYPHONIC RHYTHM RULES 4

This patch forces simultaneous onsets to be on minor 6th or major 3rd distance. All other onsets should be on 4th or 5th distance.

Both voices should follow 12-tone rows.")
   (:id 16)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 15 :in 3)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 15 :in 7))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 15 :in 9))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 1))
   (:to (:box 15 :in 8))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 1))
   (:to (:box 15 :in 10))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 1)))))