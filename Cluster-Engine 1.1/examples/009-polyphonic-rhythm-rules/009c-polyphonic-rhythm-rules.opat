
(:patch
 (:name "009c-polyphonic-rhythm-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 23:00:38")
  (:modified "2021/07/12 23:03:13")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1268 628)) (:position (0 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 394)
   (:y 415)
   (:w 775)
   (:h 166)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 167 17.6)
      (:list 333 21.225)
      (:list 667 25.475)
      (:list 833 30.525)
      (:list 1333 36.2)
      (:list 1500 41.075)
      (:list 1667 44.7)
      (:list 1833 48.95)
      (:list 2000 52.575)
      (:list 2167 56.825)
      (:list 2333 61.7)
      (:list 2667 71.95)
      (:list 3167 77.45)
      (:list 3333 81.075)
      (:list 3667 86.575)
      (:list 4000 90.825)
      (:list 4333 96.325)
      (:list 4500 99.95)
      (:list 4667 103.575)
      (:list 5000 109.075)
      (:list 5333 119.325)
      (:list 5667 124.825)
      (:list 5833 128.45)
      (:list 6000 132.075)
      (:list 6167 135.7)
      (:list 6333 140.575)
      (:list 6667 144.825)
      (:list 7167 149.7)
      (:list 7333 153.325)
      (:list 7500 156.95)
      (:list 8000 167.825)
      (:list 8167 172.7)
      (:list 8500 177.575)
      (:list 8667 181.2)
      (:list 9167 186.075)
      (:list 9333 189.7)
      (:list 9500 193.325)
      (:list 9833 199.0)
      (:list 10000 202.625)
      (:list 10167 207.0)
      (:list 10500 211.875))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 10166)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              4
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 1
                 1
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 3.0 1))
                 1.0))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1 -3)))))))
            (:lmidic
             (:list
              (:list 7500)
              (:list 7500)
              (:list 6400)
              (:list 7300)
              (:list 6500)
              (:list 7100)
              (:list 6900)
              (:list 6600)
              (:list 7400)
              (:list 6200)
              (:list 6600)
              (:list 6000)
              (:list 6200)
              (:list 6000)
              (:list 6200)
              (:list 6200)
              (:list 6300)
              (:list 6200)))
            (:lonset
             (:list
              0
              167
              333
              833
              1833
              2333
              2667
              3333
              4333
              4500
              5000
              6000
              6167
              7167
              8167
              9167
              9833
              10000
              10667))
            (:ldur
             (:list
              (:list 166)
              (:list 165)
              (:list 499)
              (:list 999)
              (:list 499)
              (:list 333)
              (:list 665)
              (:list 999)
              (:list 166)
              (:list 499)
              (:list 999)
              (:list 166)
              (:list 999)
              (:list 999)
              (:list 999)
              (:list 665)
              (:list 166)
              (:list 166)))
            (:lvel (:list 80))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 10499)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              4
              (:list
               (:list
                (:list 4 4)
                (:list
                 -2
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 1))
                 1
                 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 1 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 3.0 1))
                 1.0
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 -1)))))))
            (:lmidic
             (:list
              (:list 6800)
              (:list 6800)
              (:list 5700)
              (:list 6600)
              (:list 5800)
              (:list 6400)
              (:list 6200)
              (:list 5900)
              (:list 6700)
              (:list 5500)
              (:list 5900)
              (:list 5300)
              (:list 5500)
              (:list 5300)
              (:list 5500)))
            (:lonset
             (:list
              1333
              1500
              1667
              2167
              3167
              3667
              4000
              4667
              5667
              5833
              6333
              7333
              7500
              8500
              9500
              10667))
            (:ldur
             (:list
              (:list 166)
              (:list 166)
              (:list 499)
              (:list 999)
              (:list 499)
              (:list 332)
              (:list 666)
              (:list 999)
              (:list 165)
              (:list 499)
              (:list 999)
              (:list 166)
              (:list 999)
              (:list 999)
              (:list 999)))
            (:lvel (:list 80))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 1099)
   (:y 96)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 1063)
   (:y 65)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 1034)
   (:y 93)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 3))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 704)
   (:y 370)
   (:w 120)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 18)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 1093)
   (:y 275)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 700)
   (:id 5))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 1031)
   (:y 320)
   (:w 61)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 931)
   (:y 185)
   (:w 297)
   (:h 82)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 250))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 5750)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6100)
         (:list 6200)
         (:list 6300)
         (:list 6400)
         (:list 6500)
         (:list 6600)
         (:list 6700)
         (:list 6800)
         (:list 6900)
         (:list 7000)
         (:list 7100)
         (:list 7200)
         (:list 7300)
         (:list 7400)
         (:list 7500)
         (:list 7600)
         (:list 7700)
         (:list 7800)
         (:list 7900)))
       (:lonset
        (:list
         0
         250
         500
         750
         1000
         1250
         1500
         1750
         2000
         2250
         2500
         2750
         3000
         3250
         3500
         3750
         4000
         4250
         4500
         4750
         5750))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 7))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 1044)
   (:y 128)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 7900)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 839)
   (:y 219)
   (:w 82)
   (:h 83)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list -1/2)
     (:list 1/2)
     (:list 1/4)
     (:list 3/8)
     (:list 3/16)
     (:list 1/8)
     (:list 1/16)))
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 736)
   (:y 239)
   (:w 82)
   (:h 62)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/2)
     (:list 1/4)
     (:list 3/8)
     (:list 3/16)
     (:list 1/8)
     (:list 1/16)))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 3")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (63 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 225)
       (:y 221)
       (:w 207)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 100 200 300 400 500 700 1200))
       (:id 0))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 193)
       (:y 268)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om-abs)
       (:group-id nil)
       (:name "om-abs")
       (:x 189)
       (:y 156)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 205)
       (:y 107)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 196)
       (:y 341)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 91)
       (:y 14)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 301)
       (:y 13)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 1))))))
   (:group-id nil)
   (:name "patch 3")
   (:x 5540/7)
   (:y 132/7)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 11))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCHES-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitches-one-voice")
   (:x 786)
   (:y 96)
   (:w 141)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :durations)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RRHYTHM-RHYTHM" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rrhythm-rhythm")
   (:x 3762/7)
   (:y 657/7)
   (:w 125)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE2")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE1")
     (:value :d1_offs_d2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE2")
     (:value :norm)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-FILTER")
     (:value :at-durations-v1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux")
   (:x 4021/7)
   (:y 405/7)
   (:w 87)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :d1_offs_d2)
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (602 537)) (:position (21 46)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 2")
       (:x 399)
       (:y 303)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 0))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 76)
       (:y 346)
       (:w 445)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference not)
       (:group-id nil)
       (:name "not")
       (:x 287)
       (:y 271)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference and)
       (:group-id nil)
       (:name "and")
       (:x 292)
       (:y 224)
       (:w 58)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "test-forms")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "test-forms")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 130)
       (:y 127)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 4))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 103)
       (:y 160)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference plusp)
       (:group-id nil)
       (:name "plusp")
       (:x 335)
       (:y 153)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference plusp)
       (:group-id nil)
       (:name "plusp")
       (:x 238)
       (:y 152)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 94)
       (:y 73)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference third)
       (:group-id nil)
       (:name "third")
       (:x 338)
       (:y 72)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 243)
       (:y 72)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 274)
       (:y 431)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 282)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 2)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 1))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 9 :in 0))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 10 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil))))))
   (:group-id nil)
   (:name "patch 2")
   (:x 3587/7)
   (:y 62/7)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 15))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RCANON" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rcanon")
   (:x 693)
   (:y 97)
   (:w 75)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PARAMETER")
     (:value :rhythm&pitch)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OFFSET")
     (:value 1/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVAL")
     (:value -700)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 595)
   (:y 204)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "patch 1")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (642 495)) (:position (42 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 2")
       (:x 408)
       (:y 253)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 320)
       (:y 187)
       (:w 186)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0 300 400 500 700 800 900))
       (:id 1))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 270)
       (:y 241)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 238)
       (:y 193)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 87)
       (:y 300)
       (:w 418)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :special)
       (:reference and)
       (:group-id nil)
       (:name "and")
       (:x 109)
       (:y 190)
       (:w 58)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "test-forms")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "test-forms")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 460)
       (:y 92)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 92)
       (:y 89)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 272)
       (:y 391)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 282)
       (:y 9)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 2)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 1))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 5 :in 1))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil))))))
   (:group-id nil)
   (:name "patch 1")
   (:x 391)
   (:y 9)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 18))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 417)
   (:y 95)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :beat)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:comment
   (:x 4)
   (:y 34)
   (:w 355)
   (:h 398)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "POLYPHONIC RHYTHM RULES 3

This example combines a few rules to create a canon. 

The rcanon is a rule that forces two voices to follow each other in canon. The distance (duration and interval) is set in the second row. 

The rpitch-pitch restricts harmonic intervals at beats (this rule was discussed in tutorial 008a). Allowed harmonic intervals are '(0 300 400 500 700 800 900). 
The internal patch 1 also includes a test for avoiding errors when one voice is a rest (omand function assures this).

The rpitches-one-voice restricts melodic intervals to be any of  '(100 200 300 400 500 700 1200).

The rrhythm-rhythm forces onsets in the two voices to never coincide (this rule was discussed in tutorial 009b).

Note that the patch is computational heavy. If the function rrhythm-rhythm is disconected, a solution will immediately be found. If a solution is not found within 10,000,000 loops, the process will be stopped.
")
   (:id 20)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 4 :in 10))
   (:attributes
    (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 1))
   (:to (:box 4 :in 8))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 1))
   (:to (:box 6 :in 0))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 4 :in 9))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 4 :in 7))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 3)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 0)))))