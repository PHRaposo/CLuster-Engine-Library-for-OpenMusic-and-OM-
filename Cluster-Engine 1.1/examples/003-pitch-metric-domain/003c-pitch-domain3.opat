
(:patch
 (:name "003c-pitch-domain3")
 (:doc "")
 (:info
  (:created "2021/07/10 15:14:12")
  (:modified "2021/07/12 18:41:53")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1355 592)) (:position (5 115)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 59)
   (:y 38)
   (:w 625)
   (:h 278)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "BASIC SETUP OF THE PITCH DOMAIN - 3

cont...

Ex.5 - transposable chords
'((6000 6900)) (m (-200 500 500)) (m (-100 700)) (m (100 900)) (m (200 1100))

Similar to transposable pitch motifs, chords can be transposable. A transposable chord is identified by the letter m, and that it is wrapped within brackets. The first number indicates the melodic interval the first voice connects to the previous chord. The following numbers indicate the harmonic intervals within the chord itself.

Not that transposable chords can be defined from the lowest pitch or from the the highest pitch (or from the middle). The pitch that connects to the previous chord is always the first defined in the list (it might this be the lowest, highest or any other putch within the chord).

Just as a voice cannot start with a transposable pitch motif, it cannot start with a transposable chord: at least one chord or pitch in the domain has to be defined with MIDICENTS note numbers.")
   (:id 0))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY-EX.5")
   (:x 663)
   (:y 349)
   (:w 660)
   (:h 110)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.0)
      (:list 667 15.8)
      (:list 1333 22.8)
      (:list 2000 29.3)
      (:list 2667 42.6)
      (:list 3333 49.1)
      (:list 4000 56.399998)
      (:list 4667 63.699997)
      (:list 5333 76.2)
      (:list 6000 84.799996)
      (:list 6667 91.799996)
      (:list 7333 98.299996)
      (:list 8000 110.799996)
      (:list 8667 118.1)
      (:list 9333 124.6)
      (:list 10000 131.90001)
      (:list 10667 143.40001))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 10666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              5
              (:list
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list -4)))))
            (:lmidic
             (:list
              (:list 6000 6900)
              (:list 5800 6300 6800)
              (:list 5900 6800)
              (:list 6000 6900)
              (:list 6200 7300)
              (:list 6000 6900)
              (:list 6200 7300)
              (:list 6400 7500)
              (:list 6500 7400)
              (:list 6300 6800 7300)
              (:list 6000 6900)
              (:list 5900 6600)
              (:list 6000 6900)
              (:list 6100 7000)
              (:list 6000 6700)
              (:list 6200 7300)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2667
              3333
              4000
              4667
              5333
              6000
              6667
              7333
              8000
              8667
              9333
              10000
              13333))
            (:ldur
             (:list
              (:list 666 666)
              (:list 665 665 665)
              (:list 666 666)
              (:list 666 666)
              (:list 665 665)
              (:list 666 666)
              (:list 666 666)
              (:list 665 665)
              (:list 666 666)
              (:list 666 666 666)
              (:list 665 665)
              (:list 666 666)
              (:list 666 666)
              (:list 665 665)
              (:list 666 666)
              (:list 666 666)))
            (:lvel
             (:list
              (:list 100 100)
              (:list 100 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)
              (:list 100 100)))
            (:loffset
             (:list
              (:list 0 0)
              (:list 0 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)
              (:list 0 0)))
            (:lchan
             (:list
              (:list 1 1)
              (:list 1 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)
              (:list 1 1)))
            (:lport
             (:list
              (:list nil nil)
              (:list nil nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)
              (:list nil nil)))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 744)
   (:y 132)
   (:w 489)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list (:list 6000 6900))
     (:list m (:list -200 500 500))
     (:list m (:list -100 700))
     (:list m (:list 100 900))
     (:list m (:list 200 1100))))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 927)
   (:y 228)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 16)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value (:symbol "L" "CLUSTER-ENGINE"))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 8)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 1)))))