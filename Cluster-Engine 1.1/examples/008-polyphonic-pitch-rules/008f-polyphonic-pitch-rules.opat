
(:patch
 (:name "008f-polyphonic-pitch-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 19:31:58")
  (:modified "2021/07/12 22:58:39")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1338 694)) (:position (22 52)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 11")
   (:x 7610423/8075)
   (:y 5303247/104975)
   (:w 191)
   (:h 63)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list 200 200 100 200 200 200 100 200 200 100 200 200 200 100))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 10")
   (:x 7182448/8075)
   (:y 7087822/104975)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4800)
   (:id 1))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 7319723/8075)
   (:y 22309197/104975)
   (:w 223)
   (:h 104)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 250))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (674 317)) (:position (42 69)))
   (:edition-params (:staff :gf))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 4500)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 4800)
         (:list 5000)
         (:list 5200)
         (:list 5300)
         (:list 5500)
         (:list 5700)
         (:list 5900)
         (:list 6000)
         (:list 6200)
         (:list 6400)
         (:list 6500)
         (:list 6700)
         (:list 6900)
         (:list 7100)
         (:list 7200)))
       (:lonset
        (:list
         0
         250
         500
         750
         1000
         1250
         1500
         1750
         2000
         2250
         2500
         2750
         3000
         3250
         3500
         4500))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 5204073/8075)
   (:y 35221122/104975)
   (:w 140)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 15)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 7529673/8075)
   (:y 16325622/104975)
   (:w 74)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 4800)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value
      (:list 200 200 100 200 200 200 100 200 200 100 200 200 200 100))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 6609123/8075)
   (:y 28502722/104975)
   (:w 59)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/4)))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 5010273/8075)
   (:y 17585322/104975)
   (:w 138)
   (:h 54)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/4 1/4 1/4 1/4 1/4 1/4 1/2 1/4 1/4 1/4 1/4 1/4 1/4 1/2)))
   (:id 6))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name "CHORD")
   (:x 6221523/8075)
   (:y 9607222/104975)
   (:w 77)
   (:h 89)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (525 242)) (:position (126 161)))
   (:edition-params (:chord-mode :arp-order) (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list
         6000
         6000
         6700
         6700
         6900
         6900
         6700
         6500
         6500
         6400
         6400
         6200
         6200
         6000))
       (:lvel
        (:list
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100))
       (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
       (:ldur
        (:list
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000))
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))))))
   (:id 7))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 6156923/8075)
   (:y 20209697/104975)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 2)
   (:y 47)
   (:w 382)
   (:h 263)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "PITCH RULES THREE VOICES

This patch harmonizes Twinkle, twinkle little star.

The patch resembles the previous example, with the following changes:

- Rules that forbid parallel fifths are added.

- Only major chords are allowed (try to change this).

- Melodic intervals include repeated pitches.

Note that the domains for the first voice only contain the melody for the song. Since these domain only contain one candidate, they will not trigger a search. Rules may refer to this voice as if was searched for.")
   (:id 9))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 460)
   (:y 412)
   (:w 572)
   (:h 252)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (618 473)) (:position (105 138)))
   (:edition-params
    (:staff :g)
    (:y-shift (:list 4.0 8 8.0))
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 667 13.0)
      (:list 1333 18.5)
      (:list 2000 24.0)
      (:list 2667 35.5)
      (:list 3333 41.0)
      (:list 4000 46.5)
      (:list 4667 54.5)
      (:list 5333 66.0)
      (:list 6000 71.5)
      (:list 6667 77.0)
      (:list 7333 82.5)
      (:list 8000 94.0)
      (:list 8667 99.5)
      (:list 9333 105.0)
      (:list 10000 112.5)
      (:list 10667 124.0))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 10666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              5
              (:list
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 2))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 2))
               (:list (:list 4 4) (:list -4)))))
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 6700)
              (:list 6700)
              (:list 6900)
              (:list 6900)
              (:list 6700)
              (:list 6500)
              (:list 6500)
              (:list 6400)
              (:list 6400)
              (:list 6200)
              (:list 6200)
              (:list 6000)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2667
              3333
              4000
              5333
              6000
              6667
              7333
              8000
              8667
              9333
              13333))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 1332)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 1333)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 9999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              5
              (:list
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 -1))
               (:list (:list 4 4) (:list -4)))))
            (:lmidic
             (:list
              (:list 5700)
              (:list 5700)
              (:list 6000)
              (:list 6200)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 6000)
              (:list 5700)
              (:list 5700)
              (:list 6000)
              (:list 6000)
              (:list 5900)
              (:list 5900)
              (:list 5500)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2667
              3333
              4000
              4667
              5333
              6000
              6667
              7333
              8000
              8667
              9333
              13333))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 9999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              5
              (:list
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 -1))
               (:list (:list 4 4) (:list -4)))))
            (:lmidic
             (:list
              (:list 5300)
              (:list 5300)
              (:list 5200)
              (:list 5900)
              (:list 5300)
              (:list 5300)
              (:list 5200)
              (:list 5200)
              (:list 4800)
              (:list 4800)
              (:list 5500)
              (:list 5500)
              (:list 5500)
              (:list 5500)
              (:list 5200)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2667
              3333
              4000
              4667
              5333
              6000
              6667
              7333
              8000
              8667
              9333
              13333))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "RULES")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1015 456)) (:position (42 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 497)
       (:y 326)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rules-to-cluster")
       (:x 1933861/4080)
       (:y 1672393/6630)
       (:w 124)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "rules?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "rules?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "rules?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "rules?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "rules?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rpitch-pitch")
       (:x 485)
       (:y 193)
       (:w 102)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RULE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST-ALL-VOICES")
         (:value (:list 0 1))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMEPOINTS")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "INPUT-MODE")
         (:value :beat)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FORMAT")
         (:value :pitch)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 9")
       (:x 525)
       (:y 161)
       (:w 49)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :beat)
       (:id 3))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 4")
       (:x 496)
       (:y 108)
       (:w 52)
       (:h 48)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 0 1) (:list 1 2)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "patch 2")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 219)
           (:y 256)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 227)
           (:y 2)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference om>=)
           (:group-id nil)
           (:name "om>=")
           (:x 231)
           (:y 178)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 287)
           (:y 98)
           (:w 76)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 157)
           (:y 98)
           (:w 59)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0))))))
       (:group-id nil)
       (:name "patch 2")
       (:x 432)
       (:y 64)
       (:w 78)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 5")
       (:x 625)
       (:y 110)
       (:w 59)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0 1 2))
       (:id 6))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rpitch-pitch")
       (:x 617)
       (:y 192)
       (:w 102)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RULE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST-ALL-VOICES")
         (:value (:list 0 1))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMEPOINTS")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "INPUT-MODE")
         (:value :beat)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FORMAT")
         (:value :pitch)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "patch 3")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 229)
           (:y 343)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 205)
           (:y 1)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:library "Cluster-Engine")
           (:type :function)
           (:reference (:symbol "MIDICS-TO-PCS" "CLUSTER-ENGINE"))
           (:group-id nil)
           (:name "midics-to-pcs")
           (:x 180)
           (:y 74)
           (:w 115)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 270)
           (:y 242)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 3)
           (:id 3))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 243)
           (:y 288)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 214)
           (:y 227)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference remove-dup)
           (:group-id nil)
           (:name "remove-dup")
           (:x 200)
           (:y 163)
           (:w 105)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 2 3 4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEST")
             (:value eq)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DEPTH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0))))))
       (:group-id nil)
       (:name "patch 3")
       (:x 582)
       (:y 59)
       (:w 78)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 7")
       (:x 662)
       (:y 149)
       (:w 49)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :beat)
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "patch 4")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 299)
           (:y 456)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 95)
           (:y 0)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 301)
           (:y 0)
           (:w 60)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 401)
           (:y 237)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value t)
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 292)
           (:y 189)
           (:w 41)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 700)
           (:id 4))
          (:box
           (:type :function)
           (:reference om/=)
           (:group-id nil)
           (:name "om/=")
           (:x 326)
           (:y 240)
           (:w 70)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 242)
           (:y 188)
           (:w 41)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 700)
           (:id 6))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 225)
           (:y 227)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "if")
           (:x 219)
           (:y 292)
           (:w 211)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference not)
           (:group-id nil)
           (:name "not")
           (:x 146)
           (:y 308)
           (:w 56)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference equal)
           (:group-id nil)
           (:name "equal")
           (:x 142)
           (:y 243)
           (:w 67)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux")
           (:x 481)
           (:y 321)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value t)
           (:id 11))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "if")
           (:x 133)
           (:y 376)
           (:w 379)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:library "Cluster-Engine")
           (:type :function)
           (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
           (:group-id nil)
           (:name "apply_minus")
           (:x 380)
           (:y 80)
           (:w 105)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:library "Cluster-Engine")
           (:type :function)
           (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
           (:group-id nil)
           (:name "apply_minus")
           (:x 196)
           (:y 60)
           (:w 105)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14)))
         (:connections
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 10 :in 0))
           (:attributes
            (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 14 :in 0))
           (:attributes
            (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 10 :in 1))
           (:attributes
            (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 13 :in 0))
           (:attributes
            (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 2)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 8 :in 1))
           (:attributes
            (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 8 :in 0))
           (:attributes
            (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 0 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 5 :in 1))
           (:attributes
            (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 7 :in 0))
           (:attributes
            (:color
             (:color 0.0 0.0 1.0 1.0)
             :style
             nil
             :modif
             nil))))))
       (:group-id nil)
       (:name "patch 4")
       (:x 719)
       (:y 75)
       (:w 78)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 10))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rpitch-pitch")
       (:x 745)
       (:y 193)
       (:w 102)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RULE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST-ALL-VOICES")
         (:value (:list 0 1))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMEPOINTS")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "INPUT-MODE")
         (:value :beat)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FORMAT")
         (:value :pitch)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 816)
       (:y 49)
       (:w 47)
       (:h 68)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 0 1) (:list 1 2) (:list 0 2)))
       (:id 12))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 8")
       (:x 796)
       (:y 158)
       (:w 49)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :beat)
       (:id 13))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 318)
       (:y 148)
       (:w 46)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0 1 2))
       (:id 14))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RCHORDS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rchords")
       (:x 355)
       (:y 188)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST-VOICES")
         (:value (:list 0 1))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MODEL")
         (:value (:list (:list 4 7) (:list 3 7)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMEPOINTS")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "INPUT-MODE")
         (:value :all)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 339)
       (:y 125)
       (:w 77)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 400 700)))
       (:id 16))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "patch 1")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 180)
           (:y 318)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 110)
           (:y 23)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 250)
           (:y 24)
           (:w 60)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux")
           (:x 238)
           (:y 209)
           (:w 136)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 0 100 200 300 400))
           (:id 3))
          (:box
           (:type :function)
           (:reference member)
           (:group-id nil)
           (:name "member")
           (:x 177)
           (:y 248)
           (:w 82)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference om-abs)
           (:group-id nil)
           (:name "om-abs")
           (:x 173)
           (:y 165)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om-)
           (:group-id nil)
           (:name "om-")
           (:x 189)
           (:y 114)
           (:w 61)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0))))))
       (:group-id nil)
       (:name "patch 1")
       (:x 137)
       (:y 90)
       (:w 78)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 203)
       (:y 141)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1))
       (:id 18))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 247)
       (:y 144)
       (:w 60)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :pitches)
       (:id 19))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "RPITCHES-ONE-VOICE" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "rpitches-one-voice")
       (:x 159)
       (:y 189)
       (:w 141)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RULE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VOICES")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "INPUT-MODE")
         (:value :durations)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20)))
     (:connections
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 1 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 3)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 1 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 3)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 1 :in 4))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 3)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 1 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 2)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil))))))
   (:group-id nil)
   (:name "RULES")
   (:x 551)
   (:y 241)
   (:w 90)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
  (:connection
   (:from (:box 2 :out 1))
   (:to (:box 3 :in 10))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 1))
   (:to (:box 3 :in 12))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 1)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 3 :in 9))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 3 :in 11))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 3 :in 7))
   (:attributes
    (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 1))
   (:to (:box 8 :in 0))
   (:attributes
    (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 3 :in 8))
   (:attributes
    (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 3 :in 3))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))))