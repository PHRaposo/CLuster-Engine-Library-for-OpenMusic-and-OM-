
(:patch
 (:name "008c-polyphonic-pitch-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 22:52:37")
  (:modified "2021/07/12 22:54:02")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1264 637)) (:position (63 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 3")
   (:x 888)
   (:y 113)
   (:w 38)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :all)
   (:id 0))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 4")
   (:x 988)
   (:y 106)
   (:w 76)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :1st-voice)
   (:id 1))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 846)
   (:y 145)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :all)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (84 46)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 238)
       (:y 204)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference not)
       (:group-id nil)
       (:name "not")
       (:x 242)
       (:y 275)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 320)
       (:y 80)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 92)
       (:y 80)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 231)
       (:y 347)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 115)
       (:y 4)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 337)
       (:y 12)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "internal-patch 1")
   (:x 812)
   (:y 38)
   (:w 125)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 1024)
   (:y 214)
   (:w 74)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 5500)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value
      (:list 200 200 100 200 200 200 100 200 200 100 200 200 200 100))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 12")
   (:x 1109)
   (:y 111)
   (:w 49)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :beat)
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 10")
   (:x 712)
   (:y 55)
   (:w 87)
   (:h 44)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 200 300 400 500))
   (:id 6))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 9")
   (:x 703)
   (:y 109)
   (:w 46)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/16)
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 8")
   (:x 641)
   (:y 111)
   (:w 38)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 7")
   (:x 566)
   (:y 82)
   (:w 76)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 200))
   (:id 9))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 6")
   (:x 541)
   (:y 110)
   (:w 46)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/16)
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 471)
   (:y 99)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 11))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 643)
   (:y 142)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :longer-than)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :member)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 477)
   (:y 143)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :member)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch 3")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (126 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om>=)
       (:group-id nil)
       (:name "om>=")
       (:x 243)
       (:y 202)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 298)
       (:y 105)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 179)
       (:y 106)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 231)
       (:y 276)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 240)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "internal-patch 3")
   (:x 1073)
   (:y 35)
   (:w 125)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 14))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 1083)
   (:y 144)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :beat)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch 2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (105 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 272)
       (:y 164)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 0))
      (:box
       (:type :function)
       (:reference mod)
       (:group-id nil)
       (:name "mod")
       (:x 238)
       (:y 203)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:comment
       (:x 37)
       (:y 292)
       (:w 197)
       (:h 23)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "allowed harmonic intervals ->")
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 299)
       (:y 227)
       (:w 101)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 200 500 700))
       (:id 3))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 234)
       (:y 289)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 212)
       (:y 91)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 237)
       (:y 367)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 235)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0))))))
   (:group-id nil)
   (:name "internal-patch 2")
   (:x 940)
   (:y 36)
   (:w 125)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 16))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 957)
   (:y 145)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :1st-voice)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 525)
   (:y 438)
   (:w 627)
   (:h 151)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 167 13.0)
      (:list 333 16.625)
      (:list 667 20.875)
      (:list 1000 26.375)
      (:list 1333 30.625)
      (:list 1667 34.875)
      (:list 2000 39.125)
      (:list 2333 44.175)
      (:list 2500 48.425)
      (:list 2667 58.85)
      (:list 3000 64.35)
      (:list 3333 68.6)
      (:list 3667 74.1)
      (:list 3833 78.35)
      (:list 4000 81.975)
      (:list 4667 87.475)
      (:list 5000 93.775)
      (:list 5333 104.825005)
      (:list 5667 110.325005)
      (:list 5833 113.950005)
      (:list 6000 117.575005)
      (:list 6333 123.075005)
      (:list 6667 127.325005)
      (:list 7000 133.62502)
      (:list 7333 138.67502)
      (:list 7667 142.92502)
      (:list 8000 153.17502)
      (:list 8333 157.42502)
      (:list 8500 161.05002)
      (:list 8667 164.67502)
      (:list 9000 170.17502)
      (:list 9333 174.42502)
      (:list 9667 179.92502)
      (:list 9833 183.55002)
      (:list 10000 187.17502)
      (:list 10667 198.67502)
      (:list 11000 204.17502)
      (:list 11167 208.42502)
      (:list 11333 212.05002)
      (:list 11667 217.55002)
      (:list 12000 221.80002)
      (:list 12333 227.30002)
      (:list 12500 230.92502)
      (:list 12667 234.55002)
      (:list 13333 246.05002)
      (:list 13667 252.35002)
      (:list 13833 256.60004)
      (:list 14000 261.02502)
      (:list 14667 267.325)
      (:list 15000 272.825)
      (:list 15333 277.075)
      (:list 15667 282.575)
      (:list 15833 286.825)
      (:list 16000 296.45)
      (:list 16667 302.75)
      (:list 17000 308.25)
      (:list 17333 312.5)
      (:list 17667 316.75)
      (:list 18000 321.0)
      (:list 18667 332.5)
      (:list 19000 338.8)
      (:list 19333 343.05)
      (:list 19500 348.09998)
      (:list 19667 351.72498)
      (:list 20000 356.47498)
      (:list 20667 364.47498))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 20666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              8
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 1.0
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 2 1 1))
                 1
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list 1.0 (:list 1 (:list 1 1)) 1.0 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 1.0
                 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 1
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list 1.0 (:list 1 (:list 1 1)) 1.0 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1 1 2))
                 1.0
                 -1)))))
            (:lmidic
             (:list
              (:list 6700)
              (:list 6900)
              (:list 6700)
              (:list 7100)
              (:list 7400)
              (:list 7800)
              (:list 7400)
              (:list 7200)
              (:list 7600)
              (:list 7400)
              (:list 7600)
              (:list 7800)
              (:list 7900)
              (:list 7600)
              (:list 7800)
              (:list 7900)
              (:list 7400)
              (:list 7600)
              (:list 7200)
              (:list 7100)
              (:list 7400)
              (:list 7600)
              (:list 7800)
              (:list 7600)
              (:list 7800)
              (:list 7400)
              (:list 7600)
              (:list 7800)
              (:list 7400)
              (:list 7900)
              (:list 7800)
              (:list 7900)
              (:list 7800)
              (:list 7600)))
            (:lonset
             (:list
              0
              167
              333
              1333
              1667
              2333
              3000
              3333
              3667
              3833
              4000
              5000
              6000
              6333
              7000
              7667
              8667
              9000
              10000
              11000
              11667
              12667
              13667
              13833
              14000
              15000
              15667
              16667
              17000
              18000
              19000
              19333
              19500
              19667
              21333))
            (:ldur
             (:list
              (:list 166)
              (:list 165)
              (:list 999)
              (:list 333)
              (:list 665)
              (:list 666)
              (:list 332)
              (:list 333)
              (:list 165)
              (:list 166)
              (:list 999)
              (:list 999)
              (:list 332)
              (:list 666)
              (:list 666)
              (:list 999)
              (:list 332)
              (:list 999)
              (:list 999)
              (:list 666)
              (:list 999)
              (:list 999)
              (:list 165)
              (:list 166)
              (:list 999)
              (:list 666)
              (:list 999)
              (:list 332)
              (:list 999)
              (:list 999)
              (:list 332)
              (:list 166)
              (:list 166)
              (:list 999)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 19666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              8
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 2 1 1))))
               (:list
                (:list 4 4)
                (:list 1 (:list 1 (:list 1.0 1)) 1 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 1
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 1
                 (:list 1 (:list 2.0 1 1))
                 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1 1))
                 1
                 (:list 1 (:list 2.0 1 1))
                 1))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 1.0
                 1
                 (:list 1 (:list 2.0 1 1))))
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 1))
               (:list
                (:list 4 4)
                (:list 1 (:list 1 (:list 1 -1)) -2)))))
            (:lmidic
             (:list
              (:list 6200)
              (:list 5700)
              (:list 6200)
              (:list 6400)
              (:list 6600)
              (:list 6700)
              (:list 6900)
              (:list 7400)
              (:list 7100)
              (:list 7400)
              (:list 7200)
              (:list 7400)
              (:list 7100)
              (:list 7400)
              (:list 7200)
              (:list 7100)
              (:list 6900)
              (:list 6700)
              (:list 6900)
              (:list 6700)
              (:list 6900)
              (:list 7100)
              (:list 6900)
              (:list 7400)
              (:list 7600)
              (:list 7400)
              (:list 7100)
              (:list 6700)
              (:list 6200)
              (:list 6000)
              (:list 5900)
              (:list 6000)
              (:list 5900)
              (:list 6000)
              (:list 6400)
              (:list 6400)))
            (:lonset
             (:list
              0
              1000
              2000
              2333
              2500
              2667
              3667
              4000
              4667
              5667
              5833
              6000
              7000
              7667
              8333
              8500
              8667
              9667
              9833
              10000
              11000
              11167
              11333
              12333
              12500
              12667
              13667
              14667
              15667
              15833
              16000
              17000
              17667
              18000
              18667
              19333
              21333))
            (:ldur
             (:list
              (:list 999)
              (:list 999)
              (:list 332)
              (:list 166)
              (:list 166)
              (:list 999)
              (:list 332)
              (:list 666)
              (:list 999)
              (:list 165)
              (:list 166)
              (:list 999)
              (:list 666)
              (:list 665)
              (:list 166)
              (:list 166)
              (:list 999)
              (:list 165)
              (:list 166)
              (:list 999)
              (:list 166)
              (:list 165)
              (:list 999)
              (:list 166)
              (:list 166)
              (:list 999)
              (:list 999)
              (:list 999)
              (:list 165)
              (:list 166)
              (:list 999)
              (:list 666)
              (:list 332)
              (:list 666)
              (:list 665)
              (:list 333)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 18))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 735)
   (:y 237)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 866)
   (:y 265)
   (:w 121)
   (:h 48)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list (:list 1/16 1/16 3/8) (:list 1/4) (:list 1/8) (:list 3/8)))
   (:id 20))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 755)
   (:y 371)
   (:w 120)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 35)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 1006)
   (:y 263)
   (:w 212)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 15000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 5500)
         (:list 5700)
         (:list 5900)
         (:list 6000)
         (:list 6200)
         (:list 6400)
         (:list 6600)
         (:list 6700)
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 7400)
         (:list 7600)
         (:list 7800)
         (:list 7900)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 22))
  (:comment
   (:x 4)
   (:y 35)
   (:w 463)
   (:h 368)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "PITCH RULES TWO VOICES 3

This example patch is similar to the previous example with a few key changes.

- The rhythm domain is slightly changed, and the second voice share the larger rhythm domain.

- There is a new rpitch-pitch rule added (internal patch 1). This rule accesses every harmonic slice: every time one of the voices has a new 
note, the rule will be checked. The rule forbids the voices to move in parallell (i.e. one harmonic interval cannot have the same size as the following harmonic interval). Open the internal patch to see how this is done.

- The second rpitch-pitch function has the menu in the second row set to 
:1st-voice. This will make the rule restrict harmonic intervals between the voices at the time points where the notes in the first voice starts. The rule-patch is similar to the patch in previous example with the exception that the list of allowed harmonic intervals is changed to 
'(200 500 700), i.e. ma.2nd, 4th and perfect 5th.

- The right rmel-interval-one-voice rule is not allowing octaves as melodic intervals anymore (compare to the previous example).")
   (:id 23)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 3)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 15 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 5)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 13 :in 5)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 3)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 19 :in 4)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 3)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 21 :in 3)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 7))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 9))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 18 :in 1)))
  (:connection
   (:from (:box 22 :out 1))
   (:to (:box 21 :in 8))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 1))
   (:to (:box 21 :in 10))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))))