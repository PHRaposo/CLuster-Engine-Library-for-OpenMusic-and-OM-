
(:patch
 (:name "008b-polyphonic-pitch-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 22:50:13")
  (:modified "2021/07/12 22:52:21")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1264 637)) (:position (96 109)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 1105)
   (:y 185)
   (:w 74)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 5500)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value
      (:list 200 200 100 200 200 200 100 200 200 100 200 200 200 100))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 13")
   (:x 851)
   (:y 258)
   (:w 59)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/4)))
   (:id 1))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 12")
   (:x 1020)
   (:y 101)
   (:w 49)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :beat)
   (:id 2))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 11")
   (:x 888)
   (:y 104)
   (:w 49)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :beat)
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 10")
   (:x 714)
   (:y 56)
   (:w 96)
   (:h 51)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 200 300 400 500 1200))
   (:id 4))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 9")
   (:x 718)
   (:y 105)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/4)
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 8")
   (:x 657)
   (:y 110)
   (:w 38)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 7")
   (:x 568)
   (:y 84)
   (:w 76)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 100 200))
   (:id 7))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 6")
   (:x 544)
   (:y 112)
   (:w 46)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/16)
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 470)
   (:y 99)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 9))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 659)
   (:y 142)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :member)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 477)
   (:y 143)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :member)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch 2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (168 161)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om>=)
       (:group-id nil)
       (:name "om>=")
       (:x 189)
       (:y 204)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 244)
       (:y 107)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 125)
       (:y 108)
       (:w 59)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 177)
       (:y 278)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 186)
       (:y 2)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "internal-patch 2")
   (:x 948)
   (:y 40)
   (:w 125)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 12))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 982)
   (:y 142)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :beat)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch 1")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (147 138)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 272)
       (:y 167)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 0))
      (:box
       (:type :function)
       (:reference mod)
       (:group-id nil)
       (:name "mod")
       (:x 238)
       (:y 198)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:comment
       (:x 37)
       (:y 292)
       (:w 197)
       (:h 23)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "allowed harmonic intervals ->")
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 299)
       (:y 227)
       (:w 150)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 300 400 700 800 900))
       (:id 3))
      (:box
       (:type :function)
       (:reference member)
       (:group-id nil)
       (:name "member")
       (:x 234)
       (:y 289)
       (:w 82)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "Cluster-Engine")
       (:type :function)
       (:reference (:symbol "APPLY_MINUS" "CLUSTER-ENGINE"))
       (:group-id nil)
       (:name "apply_minus")
       (:x 212)
       (:y 91)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 237)
       (:y 367)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 235)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0))))))
   (:group-id nil)
   (:name "internal-patch 1")
   (:x 816)
   (:y 39)
   (:w 125)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 14))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCH-PITCH" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitch-pitch")
   (:x 850)
   (:y 143)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST-ALL-VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :beat)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FORMAT")
     (:value :pitch)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 487)
   (:y 425)
   (:w 723)
   (:h 140)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 667 13.0)
      (:list 1333 18.5)
      (:list 1500 24.0)
      (:list 1667 27.625)
      (:list 1833 31.25)
      (:list 2000 34.875)
      (:list 2167 40.375)
      (:list 2333 44.0)
      (:list 2500 47.625)
      (:list 2667 57.25)
      (:list 2833 62.75)
      (:list 3000 66.375)
      (:list 3167 70.0)
      (:list 3333 73.625)
      (:list 3500 79.125)
      (:list 3667 82.75)
      (:list 4000 87.0)
      (:list 4333 92.5)
      (:list 4500 96.125)
      (:list 4667 99.75)
      (:list 4833 105.25)
      (:list 5000 108.875)
      (:list 5333 119.125)
      (:list 5667 124.625)
      (:list 6000 128.875)
      (:list 6333 134.375)
      (:list 6667 138.625)
      (:list 7000 144.125)
      (:list 7167 147.75)
      (:list 7333 151.375)
      (:list 7500 156.875)
      (:list 7667 160.5)
      (:list 7833 164.125)
      (:list 8000 173.75)
      (:list 8167 179.25)
      (:list 8333 182.875)
      (:list 8667 187.125)
      (:list 9000 192.625)
      (:list 9167 196.25)
      (:list 9333 199.875)
      (:list 9500 208.375)
      (:list 9667 211.5)
      (:list 10000 215.75))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 9666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              4
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 1
                 (:list 1 (:list 1 1 1 1))
                 (:list 1 (:list 1 1 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 1 1))
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1 1 2))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1 1 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 2.0 1 1))
                 (:list 1 (:list 1 1 -2))
                 -1)))))
            (:lmidic
             (:list
              (:list 7900)
              (:list 7400)
              (:list 6200)
              (:list 6000)
              (:list 6200)
              (:list 6400)
              (:list 6600)
              (:list 6700)
              (:list 6900)
              (:list 6700)
              (:list 6900)
              (:list 6700)
              (:list 6600)
              (:list 6400)
              (:list 6200)
              (:list 6000)
              (:list 5900)
              (:list 7100)
              (:list 7200)
              (:list 7100)
              (:list 7200)
              (:list 7400)
              (:list 7600)
              (:list 6400)
              (:list 6700)
              (:list 6900)
              (:list 7100)
              (:list 6900)
              (:list 7100)
              (:list 7200)
              (:list 7100)
              (:list 7200)
              (:list 7400)
              (:list 6200)
              (:list 6400)
              (:list 6400)
              (:list 6400)))
            (:lonset
             (:list
              0
              667
              1333
              1500
              1667
              1833
              2000
              2167
              2333
              2500
              2667
              2833
              3000
              3167
              3333
              3500
              3667
              4333
              4500
              4667
              4833
              5000
              5667
              6333
              7000
              7167
              7333
              7500
              7667
              7833
              8000
              8167
              8333
              9000
              9167
              9333
              9500
              10667))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 665)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 666)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 9332)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              4
              (:list
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 1 1))
               (:list (:list 4 4) (:list 1 1 -2)))))
            (:lmidic
             (:list
              (:list 5900)
              (:list 7100)
              (:list 5900)
              (:list 5700)
              (:list 6200)
              (:list 5900)
              (:list 5500)
              (:list 6700)
              (:list 7100)
              (:list 6900)
              (:list 5700)
              (:list 5500)
              (:list 6700)
              (:list 5500)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2667
              3333
              4000
              4667
              5333
              6000
              6667
              7333
              8000
              8667
              10667))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 666)
              (:list 665)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 16))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 769)
   (:y 201)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 915)
   (:y 255)
   (:w 129)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/16 1/16) (:list 1/4)))
   (:id 18))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 789)
   (:y 328)
   (:w 120)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 35)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rhythmdomain1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pitchdomain1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 1052)
   (:y 235)
   (:w 180)
   (:h 83)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 15000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 5500)
         (:list 5700)
         (:list 5900)
         (:list 6000)
         (:list 6200)
         (:list 6400)
         (:list 6600)
         (:list 6700)
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 7400)
         (:list 7600)
         (:list 7800)
         (:list 7900)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 20))
  (:comment
   (:x 6)
   (:y 35)
   (:w 448)
   (:h 293)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "PITCH RULES TWO VOICES 2

In this example patch, the two rpitch-pitch rules are identical to the previous example with one exception: the menu in the second row is set to :beat. This will affect the rule to only be checked at beats. Any note that is not positioned at the beat will be ignored by the rule. The consequence is that the harmonic constraint is only valid at beats. 

The rhythm domain for the first voice has in this example two candidates: '(1/16 1/16) and '(1/4). The pitch domain for both voices follow a G major scale (extended to two octaves).

The two rmel-interval-one-voice rules restrict melodic intervals in both voices: Sixteenth notes can only move stepwise, and quarter notes can only move with the intervals mi./ma.2nd, mi./ma. 3rd, 4th and octaves.

When notes coinside at beats, they are constrained to be on \"good harmonic intervalic distance\" and to keep the first voice above the second (how this is done is explained in the previous example).")
   (:id 21)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 20 :in 1)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 19 :in 9))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 3)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 15 :in 3)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 5)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 5)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 3)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 3)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 19 :in 7))
   (:attributes
    (:color (:color 0.0 1.0 0.0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 1)))
  (:connection
   (:from (:box 20 :out 1))
   (:to (:box 19 :in 8))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 1))
   (:to (:box 19 :in 10))
   (:attributes
    (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))))