
(:patch
 (:name "007a-metric-rules-one-voice")
 (:doc "")
 (:info
  (:created "2021/07/12 22:39:33")
  (:modified "2021/07/12 22:40:16")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1164 630)) (:position (42 69)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 512)
   (:y 395)
   (:w 614)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 667 13.0)
      (:list 1333 18.5)
      (:list 1556 22.333334)
      (:list 2000 27.0)
      (:list 2222 31.666666)
      (:list 2444 35.5)
      (:list 2667 45.333332)
      (:list 3111 49.166665)
      (:list 3333 52.999997)
      (:list 3778 56.83333)
      (:list 4000 61.46666)
      (:list 4667 67.76666)
      (:list 4833 72.191666)
      (:list 5167 76.441666)
      (:list 5333 86.066666)
      (:list 6000 91.566666)
      (:list 6667 97.066666)
      (:list 6833 101.49167)
      (:list 7333 107.16667)
      (:list 7500 112.04167)
      (:list 8000 122.91667)
      (:list 8167 128.59168)
      (:list 8667 134.26668)
      (:list 8833 139.14168)
      (:list 9167 144.19168)
      (:list 9333 147.81668)
      (:list 9667 151.56668)
      (:list 10000 155.81668))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 9666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              4
              (:list
               (:list
                (:list 4 4)
                (:list
                 1
                 1
                 (:list 1 (:list 1 2))
                 (:list 1 (:list 1.0 1 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2.0 1))
                 (:list 1 (:list 2.0 1))
                 1
                 (:list 1 (:list 1 2 1))))
               (:list
                (:list 4 4)
                (:list
                 1
                 1
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 1.0 2 1))
                 (:list 1 (:list 1 -1))
                 -1)))))
            (:lmidic
             (:list
              (:list 6200)
              (:list 7400)
              (:list 6500)
              (:list 7200)
              (:list 7400)
              (:list 7400)
              (:list 6800)
              (:list 7700)
              (:list 7500)
              (:list 6300)
              (:list 6100)
              (:list 7100)
              (:list 6200)
              (:list 6700)
              (:list 7700)
              (:list 7800)
              (:list 6500)
              (:list 6300)
              (:list 7900)
              (:list 6300)
              (:list 7700)))
            (:lonset
             (:list
              0
              667
              1333
              1556
              2222
              2444
              3111
              3778
              4000
              4667
              4833
              5167
              5333
              6000
              6667
              6833
              7500
              8167
              8833
              9167
              9333
              10667))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 222)
              (:list 665)
              (:list 221)
              (:list 666)
              (:list 666)
              (:list 221)
              (:list 666)
              (:list 165)
              (:list 333)
              (:list 165)
              (:list 666)
              (:list 666)
              (:list 165)
              (:list 666)
              (:list 666)
              (:list 665)
              (:list 333)
              (:list 165)
              (:list 333)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 0))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 942)
   (:y 160)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 7900)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 926)
   (:y 211)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 941)
   (:y 267)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 933)
   (:y 131)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 952)
   (:y 101)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 980)
   (:y 131)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 740)
   (:y 256)
   (:w 161)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/12) (:list 1/16) (:list 1/8) (:list 1/4)))
   (:id 7))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 735)
   (:y 336)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 21)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 566)
   (:y 258)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 2")
   (:x 617)
   (:y 135)
   (:w 77)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :durations)
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 583)
   (:y 134)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 11))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMETRIC-HIERARCHY" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmetric-hierarchy")
   (:x 566)
   (:y 190)
   (:w 132)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULE-MODE")
     (:value :durations)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:comment
   (:x 21)
   (:y 44)
   (:w 460)
   (:h 428)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES ONE VOICE 6

METRIC RULES

Metric rules constrain how durations relate to the metric structure. Metric rules use information from the metric domain to understand the definition of beats inside measures. If a simple definition of the metric domain is used, the beat length will be understood as the lower number in the time signature (i.e. '(4 4) has 1/4 as the beat length, '(6 8) has 1/8 as the beat length, etc). See further tutorial 003c.

The rule rmetric-hierarchy restricts how events can be positioned in relation to the metric structure. The rule uses the list of allowed subdivisions of beats from the metric domain. If a simple definition of the metric is used, the default setting will be '(3 4). This means that the rmetric-hierarchy rule will subdivide beats into 3 or 4 parts. The subdivisions can be thought of as a grid of allowed positions.

In the example patch, the quarter note long beat can be subdivided into eighth note triplets (= 3 parts) or sixteenth notes (= 4 parts). The starting points of events are not allowed to fall outside this division. Try to disconnect the rule and compare the result: Without the rule, the triplets may end up at positions that create a very complex relation to the metric structure.

The list of allowed subdivision of beats can be changed if the metric-domain box is used when defining the metric domain (see tutorial 003c).")
   (:id 13)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 8)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 7)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 3)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 0)))))