
(:patch
 (:name "010b-jbs-rules")
 (:doc "")
 (:info
  (:created "2021/07/12 19:01:18")
  (:modified "2021/07/12 19:01:49")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (956 539)) (:position (147 138)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 22)
   (:y 216)
   (:w 226)
   (:h 83)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "OBS.: The jbs-constraints library, by Jacopo Baboni Schilingi, it's not fully available for OM#. The function used in this patch it's only a demonstration.")
   (:id 0))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 227)
   (:y 384)
   (:w 668)
   (:h 120)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 1333 17.1)
      (:list 1500 25.9)
      (:list 2000 31.574999)
      (:list 2667 43.249997)
      (:list 3167 48.124997)
      (:list 3333 51.749997)
      (:list 4667 55.374997)
      (:list 5000 59.799996)
      (:list 5333 70.85)
      (:list 6667 75.9)
      (:list 8000 90.700005)
      (:list 8167 98.700005)
      (:list 8667 103.575005)
      (:list 9333 108.450005)
      (:list 9500 114.12501)
      (:list 10000 119.80001)
      (:list 10667 130.67502)
      (:list 11333 136.17502)
      (:list 11667 141.67502)
      (:list 12000 145.92502)
      (:list 12667 150.17502)
      (:list 12833 154.42502)
      (:list 13333 165.30002)
      (:list 14000 170.17502)
      (:list 14167 174.55002)
      (:list 14667 179.42502))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 14166)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              6
              (:list
               (:list
                (:list 4 4)
                (:list 2 (:list 1 (:list 1.0 3)) 1.0))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 3.0 1))
                 2.0
                 (:list 1 (:list 1.0 1))))
               (:list (:list 4 4) (:list 2.0 2))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 1.0
                 (:list 1 (:list 1.0 3))
                 1.0))
               (:list
                (:list 4 4)
                (:list
                 1
                 (:list 1 (:list 1.0 1))
                 1.0
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list 1.0 (:list 1 (:list 1.0 -3)) -2)))))
            (:lmidic
             (:list
              (:list 6300)
              (:list 6100)
              (:list 6200)
              (:list 6300)
              (:list 6100)
              (:list 6200)
              (:list 6100)
              (:list 6400)
              (:list 6500)
              (:list 6400)))
            (:lonset
             (:list
              0
              1500
              3167
              5000
              6667
              8167
              9500
              10667
              11667
              12833
              16000))
            (:ldur
             (:list
              (:list 1499)
              (:list 1666)
              (:list 1832)
              (:list 1666)
              (:list 1499)
              (:list 1332)
              (:list 1166)
              (:list 999)
              (:list 1165)
              (:list 1333)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 808)
   (:y 57)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 754)
   (:y 56)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 702)
   (:y 56)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 4))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 502)
   (:y 302)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 710)
   (:y 180)
   (:w 130)
   (:h 70)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 20000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6100)
         (:list 6200)
         (:list 6300)
         (:list 6400)
         (:list 6500)
         (:list 6600)
         (:list 6700)
         (:list 6800)
         (:list 6900)
         (:list 7000)
         (:list 7100)
         (:list 7200)
         (:list 7300)
         (:list 7400)
         (:list 7500)
         (:list 7600)
         (:list 7700)
         (:list 7800)
         (:list 7900)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 6))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 744)
   (:y 103)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 7900)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 457)
   (:y 207)
   (:w 238)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/16)
     (:list 1/8)
     (:list 3/16)
     (:list 1/4)
     (:list 5/16)
     (:list 3/8)
     (:list 7/16)
     (:list 1/2)
     (:list 9/16)
     (:list 5/8)
     (:list 11/16)
     (:list 3/4)))
   (:id 8))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 2")
   (:x 574)
   (:y 132)
   (:w 77)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :durations)
   (:id 9))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux")
   (:x 362)
   (:y 122)
   (:w 64)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :pitches)
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 5")
   (:x 480)
   (:y 27)
   (:w 56)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1/16))
   (:id 11))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 4")
   (:x 240)
   (:y 25)
   (:w 111)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list -100 200 -300))
   (:id 12))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RJBS-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rjbs-one-voice")
   (:x 366)
   (:y 177)
   (:w 118)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "JBSRULE0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULETYPE0")
     (:value :pitches)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "jbsrule1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "ruletype1")
     (:value :durations)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "voice1")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "ALLOWED-INTERVALS-RULE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "allowed-intervals-rule")
   (:x 440)
   (:y 77)
   (:w 157)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value (:list -100 200 -300))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ABSOLUTE?")
     (:value :absolute)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODE?")
     (:value :true/false)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "WEIGHT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "ALLOWED-INTERVALS-RULE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "allowed-intervals-rule")
   (:x 230)
   (:y 76)
   (:w 157)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value (:list -100 200 -300))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ABSOLUTE?")
     (:value :absolute)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODE?")
     (:value :true/false)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "WEIGHT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:comment
   (:x 24)
   (:y 33)
   (:w 158)
   (:h 143)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "This patch illustrates how to use rules from the jbs-constraints library with the cluster engine.

Note that these rules only can constrain one engine.")
   (:id 16)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 6 :out 1)) (:to (:box 5 :in 8)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 7)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 13 :in 4)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 5 :in 3)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 0)))))