; OM File Header - Saved 2021/07/23 2:04:36
; (6.18 :patc (om-make-point 335 479) (om-make-point 288 23) (om-make-point 1016 633) "" 183 0 "2021/07/05 17:22:30" "2021/07/19 11:51:17")
; End File Header
(in-package :om)(load-lib-for (quote ("Cluster-Engine")))(setf *om-current-persistent* (om-load-patch1 "001A-BASICS" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 47 27) (quote "etc...") "" (om-make-point 909 429) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 7" (om-make-point 130 57) (quote "voice1:$durations  pitches") "" (om-make-point 785 428) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 130 57) (quote "voice0:$durations  pitches") "" (om-make-point 637 429) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 6" (om-make-point 102 26) (quote "metric-domain") "" (om-make-point 526 429) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 5" (om-make-point 48 27) (quote "output") "" (om-make-point 474 429) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 48 27) (quote "tempo") "" (om-make-point 404 429) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 48 27) (quote "rules") "" (om-make-point 327 428) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 63 26) (quote "debug?") "" (om-make-point 247 427) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 37 29) (quote "rnd?") "" (om-make-point 181 427) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 102 33) (quote "no-of-variables") "" (om-make-point 69 427) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 487 299) (quote "The Cluster Engine system builds a score from domains of allowed durations and pitches. A domain is a set of allowed durations or pitches. One element in a domain is called a candidate. To build a single voice, the system needs two domains; one with allowed durations and one with allowed pitches. A characteristic of the Cluster Engine system is that each voice in a score is built from its own dedicated domains.$$It is possible to search for voices with only durations (excluding pitches) but you cannot search for a voice with only pitches (excluding durations): a pitch value needs to know its time position to exit in the final score. $$OBS.: to show additional inputs it's better to use the \"option + right-arrow\" command instead of \"shift + >\".") "" (om-make-point 452 44) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CLUSTER-ENGINE" (quote cluster-engine::cluster-engine) (quote ((om-load-inputfun (quote input-funbox) "integer" "NO-OF-VARIABLES" 10) (om-load-inputfun (quote input-funbox) "t/nil" "RND?" (quote t)) (om-load-inputfun (quote input-funbox) "t/nil" "DEBUG?" nil) (om-load-inputfun (quote input-funbox) "t/nil" "RULES" nil) (om-load-inputfun (quote input-funbox) "number" "TEMPO" 90) (om-load-inputfunmenu1 (quote input-funmenu) "voices-or-list" "OUTPUT" (quote :voices) (list (list "voices" (quote :voices)) (list "list" (quote :list)))) (om-load-inputfun (quote input-funbox) "list-of-timsig" "METRIC-DOMAIN" nil) (om-load-inputfun (quote input-funbox) "ratios" "RHYTHMDOMAIN0" nil) (om-load-inputfun (quote input-funbox) "midics" "PITCHDOM0" nil) (om-load-inputfun (quote input-funbox) "ratios" "RHYTHMDOMAIN1" nil) (om-load-inputfun (quote input-funbox) "midics" "PITCHDOMAIN1" nil))) (om-make-point 42 491) (om-make-point 908 75) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 392 287) (quote "In the Cluster Engine system, one box manage the cluster of search engines. The search process takes place inside this box and is not visible to the user (but it is possible to study parts of how the search is/was done by using the available debug tools).$$The system will use the number of engines it finds necessary to solve a problem. This depends on the number of voices and the number of unknown parameters. There is no reason for a user to try to affect the number of used engines.$$The cluster-engine function can be expanded in order to increase the number of simultaneous voices being searched for. The maximum is set to 10 voices. The basic inputs/settings are described below.") "" (om-make-point 27 46) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 152 34) (quote "BASIC PARAMETERS") "" (om-make-point 142 6) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) nil 6.18))
