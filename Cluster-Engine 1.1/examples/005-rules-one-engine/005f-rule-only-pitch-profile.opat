
(:patch
 (:name "005f-rule-only-pitch-profile")
 (:doc "")
 (:info
  (:created "2021/07/10 15:16:41")
  (:modified "2021/07/12 18:46:35")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1241 658)) (:position (105 88)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 636)
   (:y 106)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 686)
   (:y 107)
   (:w 37)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 2))
   (:id 1))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RONLY-M-MOTIFS" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "ronly-m-motifs")
   (:x 827)
   (:y 139)
   (:w 122)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference
    (:symbol "RRHYTHMS-ONE-VOICE-AT-TIMEPOINTS" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rrhythms-one-voice-at-timepoints")
   (:x 570)
   (:y 142)
   (:w 226)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMEPOINTS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :dur-start)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 976)
   (:y 284)
   (:w 226)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 6000) (:list m 700 -300) (:list m -700 300)))
   (:id 4))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 694)
   (:y 246)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 880)
   (:y 256)
   (:w 155)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/4) (:list 1/8) (:list 1/16) (:list 3/8)))
   (:id 6))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 644)
   (:y 478)
   (:w 490)
   (:h 96)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (650 300)) (:position (84 115)))
   (:edition-params
    (:staff :gf)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 333 11.75)
      (:list 500 15.375)
      (:list 667 19.0)
      (:list 1167 22.625)
      (:list 1333 26.25)
      (:list 2000 29.875)
      (:list 2167 33.5)
      (:list 2333 37.925)
      (:list 2667 48.975)
      (:list 3333 53.225)
      (:list 3500 56.85)
      (:list 3833 61.1)
      (:list 4000 65.525)
      (:list 4667 71.825005)
      (:list 5000 77.325005)
      (:list 5333 87.575005)
      (:list 6000 92.575005))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 5999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              3
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2 1 1))
                 (:list 1 (:list 3.0 1))
                 1.0
                 (:list 1 (:list 1.0 1 2))))
               (:list
                (:list 4 4)
                (:list
                 1.0
                 (:list 1 (:list 1 2 1))
                 1
                 (:list 1 (:list 1.0 1))))
               (:list (:list 4 4) (:list 1 -3)))))
            (:lmidic
             (:list
              (:list 6000)
              (:list 6700)
              (:list 6400)
              (:list 7100)
              (:list 6800)
              (:list 7500)
              (:list 7200)
              (:list 6500)
              (:list 6800)
              (:list 7500)
              (:list 7200)
              (:list 6500)))
            (:lonset
             (:list
              0
              333
              500
              1167
              2167
              2333
              3333
              3500
              3833
              4000
              5000
              5333
              8000))
            (:ldur
             (:list
              (:list 332)
              (:list 166)
              (:list 666)
              (:list 999)
              (:list 165)
              (:list 999)
              (:list 166)
              (:list 332)
              (:list 166)
              (:list 999)
              (:list 332)
              (:list 666)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "rule-1")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 228)
       (:y 221)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 190)
       (:y 40)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 267)
       (:y 68)
       (:w 60)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0 1/4))
       (:id 2))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 233)
       (:y 139)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "rule-1")
   (:x 591)
   (:y 49)
   (:w 72)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 8))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 815)
   (:y 377)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 12)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:comment
   (:x 8)
   (:y 42)
   (:w 519)
   (:h 413)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES ONE ENGINE 6

Rule that only allow pitch profiles:

If the domain contains pitch profiles (see tutorial 003b), it also has to contain at least  one candidate with fixed pitches (in this example MIDICENTS note 6000).
If 6000 is only considered the starting point, it is not desired that the engine picks this candidate more than once. The rule ronly-m-motifs assures this.


Rules for durations at time-points:

The rrhythm-one-voice-at-timepoints has similarities to an index rule: The rule constrain a specific variable. The difference is that which variable(s) depend on their time point in the score. The position of a variable vary depends on the durations of the previous events in the score. 

The internal patch in the example patch receives a list with the information '(offset duration).  Offset is the duration between the starting point of the duration and the timepoint given by the user on the rrhythm-one-voice-at-timepoints function.  If the duration starts at the given timepoint, the offset will be 0. If the duration starts before the timepoint (and thus sustain over the timepoint) the offset will be a negative fraction. The internal patch needs as many inputs as there are given time points.

In the example patch, the rule forces the 3rd measure to have a quarter note at the first downbeat.")
   (:id 10)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 8)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 9 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 7)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 1)))))