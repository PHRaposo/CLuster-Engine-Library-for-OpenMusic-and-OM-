
(:patch
 (:name "005c-index-rules-one-engine3")
 (:doc "")
 (:info
  (:created "2021/07/10 15:15:50")
  (:modified "2021/07/12 18:45:08")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1061 602)) (:position (42 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 502)
   (:y 410)
   (:w 510)
   (:h 87)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 167 11.125)
      (:list 333 14.75)
      (:list 667 19.0)
      (:list 1333 23.25)
      (:list 1500 26.875)
      (:list 2000 31.75)
      (:list 2500 36.625)
      (:list 2667 46.25)
      (:list 2833 49.875)
      (:list 3333 54.75)
      (:list 3833 59.625)
      (:list 4000 63.25)
      (:list 4167 66.875)
      (:list 4333 70.5)
      (:list 4667 74.75)
      (:list 5000 79.0)
      (:list 5333 89.25)
      (:list 6000 94.75)
      (:list 6333 99.75)
      (:list 6667 104.0))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 6332)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              3
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 1.0
                 (:list 1 (:list 1 3))
                 (:list 1 (:list 3.0 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3.0 1))
                 (:list 1 (:list 1.0 1 2))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list 1 (:list 1 (:list 1.0 -1)) -2)))))
            (:lmidic
             (:list
              (:list 7200)
              (:list 7100)
              (:list 7200)
              (:list 6600)
              (:list 6700)
              (:list 6200)
              (:list 6700)
              (:list 7100)
              (:list 6600)
              (:list 6700)
              (:list 6900)
              (:list 6600)))
            (:lonset
             (:list
              0
              167
              333
              1333
              1500
              2500
              2833
              3833
              4167
              4333
              5000
              5333
              8000))
            (:ldur
             (:list
              (:list 166)
              (:list 165)
              (:list 999)
              (:list 166)
              (:list 999)
              (:list 332)
              (:list 999)
              (:list 333)
              (:list 165)
              (:list 666)
              (:list 332)
              (:list 999)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 803)
   (:y 202)
   (:w 165)
   (:h 58)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 6000)
     (:list 6200 6700)
     (:list 6400)
     (:list 6600 6700)
     (:list 6700)
     (:list 6900)
     (:list 7100)
     (:list 7200)))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 710)
   (:y 157)
   (:w 155)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/4) (:list 1/8) (:list 1/16) (:list 3/8)))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 683)
   (:y 300)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 12)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 650)
   (:y 143)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 608)
   (:y 142)
   (:w 38)
   (:h 31)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 2))
   (:id 5))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 179)
       (:y 227)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 99)
       (:y 41)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 279)
       (:y 44)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 184)
       (:y 138)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "internal-patch")
   (:x 534)
   (:y 78)
   (:w 115)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 6))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RINDEX-PITCHES-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rindex-pitches-one-voice")
   (:x 563)
   (:y 183)
   (:w 177)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "POSITIONS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :index-for-cell)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:comment
   (:x 15)
   (:y 43)
   (:w 466)
   (:h 338)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES ONE ENGINE 3

In this example, the index rule restricts the relation between the 1st and the 3rd variable in the pitch engine. Note that the rindex-pitches-one-voice function has its menu set to :index-for-cell. With this setting, the box will not receive two pitches but two lists with either motifs, chords or individual pitches: the exact format depends on the candidates in the domain. Note that pitch profiles (not part of this example) will be converted to their absolute (i.e. transposed) pitches.

In the example, the domain contains 6 individual pitches and 2 motifs that both are built of 2 pitches, '(6200 6700) and '(6600 6700). The rule will force the 1st and 3rd to be equal (open the internal-patch to see how this is done). 

Note that '= can not be used to compare lists in Lisp. This is the reason why 'equal is used inside the abstraction.

Try to change the menu setting to :position-for-pitches. The system behaves slightly different with this setting, since the system will consider pitches inside motifs as separate elements.
")
   (:id 8)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 8)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 7)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 3)))))