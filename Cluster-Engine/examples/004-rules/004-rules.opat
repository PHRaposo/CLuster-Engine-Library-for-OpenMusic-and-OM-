
(:patch
 (:name "004-rules")
 (:doc "")
 (:info
  (:created "2021/07/10 15:14:41")
  (:modified "2021/07/10 15:14:53")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (837 536)) (:position (147 161)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RCANON" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rcanon")
   (:x 560)
   (:y 357)
   (:w 75)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value (:list 0 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PARAMETER")
     (:value :rhythm)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OFFSET")
     (:value 1/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVAL")
     (:value 7)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 575)
   (:y 90)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 1))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 7")
   (:x 618)
   (:y 90)
   (:w 64)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :pitches)
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPITCHES-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpitches-one-voice")
   (:x 531)
   (:y 126)
   (:w 141)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE")
     (:value :pitches)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om>)
       (:group-id nil)
       (:name "om>")
       (:x 190)
       (:y 198)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 176)
       (:y 279)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "first-input") (:doc "")))
       (:group-id nil)
       (:name "first-input")
       (:x 230)
       (:y 42)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "second-input") (:doc "")))
       (:group-id nil)
       (:name "second-input")
       (:x 118)
       (:y 41)
       (:w 94)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 0 :in 1))
       (:attributes
        (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil))))))
   (:group-id nil)
   (:name "internal-patch")
   (:x 469)
   (:y 38)
   (:w 115)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "first-input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "second-input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 4))
  (:comment
   (:x 23)
   (:y 40)
   (:w 415)
   (:h 383)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES 

A rule is typically built of two boxes: 

1. A rule applicator box that looks into the score the system is building and accesses the score elements that are constrained.

2. An internal patch that contains the actual constraint. The internal patch should have only one output, that should be 
connected to the applicator function. The internal patch needs to be in the lambda mode (select the internal patch and press \"l\").

The number of inputs on the internal patch reflects the number of consecutive score elements that are related in the the rule restriction. The example rule in the internal patch states that a pitch has to be higher than the preceeding pitch. To create this rule, the internal patch needs two inputs: The rule restriction will compare the two inputs and state that the second one has to be higher than the first (double click on the internal patch to see how this is done).


Some rules use only one function. These rules have a predefined concept. An example is the rcanon function, that forces one voice to follow another voice in a canon.")
   (:id 5)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))))