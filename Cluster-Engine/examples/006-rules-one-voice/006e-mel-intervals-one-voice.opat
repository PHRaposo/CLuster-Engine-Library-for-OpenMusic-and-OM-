
(:patch
 (:name "006e-mel-intervals-one-voice")
 (:doc "")
 (:info
  (:created "2021/07/12 18:52:47")
  (:modified "2021/07/12 18:53:20")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1158 589)) (:position (42 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 566)
   (:y 86)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :smaller-than)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 585)
   (:y 397)
   (:w 516)
   (:h 89)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 265 11.75)
      (:list 531 16.0)
      (:list 796 20.25)
      (:list 1062 24.5)
      (:list 1327 29.55)
      (:list 1593 34.6)
      (:list 1858 38.85)
      (:list 2124 49.1)
      (:list 2389 53.35)
      (:list 2655 57.6)
      (:list 2920 61.85)
      (:list 3186 66.1)
      (:list 3451 70.35)
      (:list 3717 74.6)
      (:list 3982 78.85)
      (:list 4248 89.1)
      (:list 4779 94.1))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 4778)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              3
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 1))))
               (:list (:list 4 4) (:list 1 -3)))))
            (:lmidic
             (:list
              (:list 6500)
              (:list 6500)
              (:list 7000)
              (:list 7500)
              (:list 7000)
              (:list 6500)
              (:list 7000)
              (:list 6500)
              (:list 7000)
              (:list 6800)))
            (:lonset
             (:list 0 265 796 1327 1858 2389 2920 3451 3982 4248 6372))
            (:ldur
             (:list
              (:list 264)
              (:list 530)
              (:list 530)
              (:list 530)
              (:list 530)
              (:list 530)
              (:list 530)
              (:list 530)
              (:list 265)
              (:list 530)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 113))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 865)
   (:y 37)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 500)
   (:id 2))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 10")
   (:x 814)
   (:y 37)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/4)
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 687)
   (:y 37)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 400)
   (:id 4))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 5")
   (:x 637)
   (:y 37)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/8)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 1013)
   (:y 90)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 963)
   (:y 64)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 938)
   (:y 94)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 8))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 945)
   (:y 230)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 930)
   (:y 174)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 946)
   (:y 123)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 7900)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 829)
   (:y 224)
   (:w 92)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/8) (:list 1/4)))
   (:id 12))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 663)
   (:y 179)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMEL-INTERVAL-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmel-interval-one-voice")
   (:x 744)
   (:y 82)
   (:w 168)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEGMENTS?")
     (:value :normal)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-DUR")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURATIONS")
     (:value 1/4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MATCH-PITCH")
     (:value :=)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INTERVALS")
     (:value 5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 791)
   (:y 295)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 113)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:comment
   (:x 15)
   (:y 35)
   (:w 457)
   (:h 263)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES ONE VOICE 5

The rmel-interval-one-voice function is a classic counterpoint rule: it restricts melodic intervals from certain durations. In for example Renaissance counterpoint, it is common that melodic gestures on faster note values move with smaller melodic intervals than when note values are longer. The rmel-interval-one-voice is designed for this type of rules. The concept behind the rule is a powerful musical tool to create consistent melodic profile.

The function does not need an internal patch. Instead all settings are integrated in the same function (the rule can also be created with the help of the rrhythm-pitch-one-voice and an internal patch).

The rmel-interval-one-voice function has settings for different test functions and to break at rests. These settings work in a similar way to what have been discussed in previous examples.")
   (:id 16)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 5)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 14 :in 3)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 5)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 0 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 15 :in 8)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 15 :in 7)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 15 :in 3)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 1 :in 1)))))