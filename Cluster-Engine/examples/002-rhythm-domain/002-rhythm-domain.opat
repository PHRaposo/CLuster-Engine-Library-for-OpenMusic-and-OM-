
(:patch
 (:name "002-rhythm-domain")
 (:doc "")
 (:info
  (:created "2021/07/10 15:13:19")
  (:modified "2021/07/12 18:40:06")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1300 593)) (:position (42 46)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 62)
   (:y 3)
   (:w 441)
   (:h 473)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "                 BASIC SETUP OF THE RHYTHM DOMAIN

The rhythm of a voice in the solution is built as a combination of candidates from its rhythm domain. A duration value is indicated as a fraction, representing the proportional length of the duration (1/4 = a quarter note, 3/8 = a dotted quarter note, etc). A negative fractions indicates a rest.

The rhythm domain can be organized in two different ways (or as a combination of both ways).

1. As single durations
2. As rhythm motifs

Durations in rhythm motifs have a fixed order that cannot be changed by the search engine.

The system can build a score without pitches. The notes in the solutions in the patch have x-note heads to indicate that no pitches are assigned.


Ex.1 - single durations
'((1/16)(1/8)(3/16)(1/4))
Each individual duration is separated by brackets.

Ex.2 - rhythm motifs
'((1/16 1/16 1/8) (1/16 1/8 1/16) (1/12 1/12 1/12) (1/2))

Note how several durations are grouped inside the same brackets in the rhythm motifs. ")
   (:id 0))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY-EX.2")
   (:x 660)
   (:y 436)
   (:w 462)
   (:h 104)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 1333 15.5)
      (:list 2667 29.5)
      (:list 2833 33.125)
      (:list 3000 36.75)
      (:list 3333 41.0)
      (:list 3500 44.625)
      (:list 3667 48.25)
      (:list 4000 52.5)
      (:list 4222 56.333332)
      (:list 4444 60.166665)
      (:list 4667 63.499997))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 4666)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              2
              (:list
               (:list (:list 4 4) (:list 2 2))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 1 1 2))
                 (:list 1 (:list 1 1 1))
                 -1)))))
            (:lmidic (:list 6000))
            (:lonset
             (:list
              0
              1333
              2667
              2833
              3000
              3333
              3500
              3667
              4000
              4222
              4444
              5333))
            (:ldur
             (:list
              (:list 1332)
              (:list 1333)
              (:list 165)
              (:list 166)
              (:list 332)
              (:list 166)
              (:list 166)
              (:list 332)
              (:list 221)
              (:list 221)
              (:list 222)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 1))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 845)
   (:y 353)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 733)
   (:y 304)
   (:w 349)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1/16 1/16 1/8)
     (:list 1/16 -1/8 1/16)
     (:list 1/12 1/12 1/12)
     (:list 1/2)))
   (:id 3))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY-EX.1")
   (:x 671)
   (:y 175)
   (:w 419)
   (:h 95)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 333 11.75)
      (:list 667 16.0)
      (:list 833 20.25)
      (:list 1167 24.5)
      (:list 1333 28.125)
      (:list 1667 31.75)
      (:list 2000 36.0)
      (:list 2167 40.25)
      (:list 2667 51.125)
      (:list 2833 56.0)
      (:list 3333 60.875)
      (:list 3833 65.75)
      (:list 4000 69.375)
      (:list 4167 73.0)
      (:list 4667 77.875)
      (:list 4833 82.25))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 4832)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              2
              (:list
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1.0 2 1))
                 (:list 1 (:list 1.0 1))
                 (:list 1 (:list 1.0 3))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 3 1))
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 1.0 -3)))))))
            (:lmidic (:list 6000))
            (:lonset
             (:list 0 333 833 1167 1667 2167 2833 3333 3833 4167 5333))
            (:ldur
             (:list
              (:list 332)
              (:list 499)
              (:list 333)
              (:list 499)
              (:list 499)
              (:list 665)
              (:list 499)
              (:list 499)
              (:list 333)
              (:list 665)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 4))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 837)
   (:y 81)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 811)
   (:y 29)
   (:w 171)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/16) (:list 1/8) (:list 3/16) (:list 1/4)))
   (:id 6)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 7)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 7)))))