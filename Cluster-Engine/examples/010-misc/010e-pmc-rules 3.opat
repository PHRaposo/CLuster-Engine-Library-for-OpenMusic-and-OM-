
(:patch
 (:name "010e-pmc-rules 3")
 (:doc "")
 (:info
  (:created "2021/08/02 23:17:26")
  (:modified "2021/08/02 23:18:09")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (908 592)) (:position (105 138)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "rule-no-pitch-class-dups")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (773 472)) (:position (126 161)))
     (:text
      (:list
       "(lambda ()"
       " (list"
       "  '(* ?1 (?if (not (member (ce::midics-to-pcs ?1)"
       "                                        (ce::midics-to-pcs (rest rl))))) "
       "    \"no pitch-class dups\")"
       " )"
       ")"))))
   (:group-id nil)
   (:name "rule-no-pitch-class-dups")
   (:x 1059/4)
   (:y 611/12)
   (:w 177)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RPMC-ONE-VOICE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rpmc-one-voice")
   (:x 1527/4)
   (:y 1607/12)
   (:w 125)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PMCRULES0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULETYPE0")
     (:value :pitches)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICE0")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "pmcrules1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "ruletype1")
     (:value :pitches)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "voice1")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "rule-max-melodic-interval")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       "(lambda ()"
       " (list"
       "  '(* ?1 ?2 (?if (< (abs (- ?2 ?1)) 3600))"
       "    \"melodic intervals no greater than three octaves\")"
       " )"
       ")"))))
   (:group-id nil)
   (:name "rule-max-melodic-interval")
   (:x 1779/4)
   (:y 611/12)
   (:w 183)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 1751/4)
   (:y 2563/12)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:comment
   (:x 9)
   (:y 37)
   (:w 236)
   (:h 128)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "This patch demonstrates how to write pmc-rules using the \"lisp\" patch. There are two rules: 

- No pitch-class duplicates;

- Melodic intervals limited to three octaves.")
   (:id 4))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 718)
   (:y 210)
   (:w 90)
   (:h 68)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (650 300)) (:position (168 207)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 88000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:lmidic
        (:list
         (:list 2100)
         (:list 2200)
         (:list 2300)
         (:list 2400)
         (:list 2500)
         (:list 2600)
         (:list 2700)
         (:list 2800)
         (:list 2900)
         (:list 3000)
         (:list 3100)
         (:list 3200)
         (:list 3300)
         (:list 3400)
         (:list 3500)
         (:list 3600)
         (:list 3700)
         (:list 3800)
         (:list 3900)
         (:list 4000)
         (:list 4100)
         (:list 4200)
         (:list 4300)
         (:list 4400)
         (:list 4500)
         (:list 4600)
         (:list 4700)
         (:list 4800)
         (:list 4900)
         (:list 5000)
         (:list 5100)
         (:list 5200)
         (:list 5300)
         (:list 5400)
         (:list 5500)
         (:list 5600)
         (:list 5700)
         (:list 5800)
         (:list 5900)
         (:list 6000)
         (:list 6100)
         (:list 6200)
         (:list 6300)
         (:list 6400)
         (:list 6500)
         (:list 6600)
         (:list 6700)
         (:list 6800)
         (:list 6900)
         (:list 7000)
         (:list 7100)
         (:list 7200)
         (:list 7300)
         (:list 7400)
         (:list 7500)
         (:list 7600)
         (:list 7700)
         (:list 7800)
         (:list 7900)
         (:list 8000)
         (:list 8100)
         (:list 8200)
         (:list 8300)
         (:list 8400)
         (:list 8500)
         (:list 8600)
         (:list 8700)
         (:list 8800)
         (:list 8900)
         (:list 9000)
         (:list 9100)
         (:list 9200)
         (:list 9300)
         (:list 9400)
         (:list 9500)
         (:list 9600)
         (:list 9700)
         (:list 9800)
         (:list 9900)
         (:list 10000)
         (:list 10100)
         (:list 10200)
         (:list 10300)
         (:list 10400)
         (:list 10500)
         (:list 10600)
         (:list 10700)
         (:list 10800)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000
         21000
         22000
         23000
         24000
         25000
         26000
         27000
         28000
         29000
         30000
         31000
         32000
         33000
         34000
         35000
         36000
         37000
         38000
         39000
         40000
         41000
         42000
         43000
         44000
         45000
         46000
         47000
         48000
         49000
         50000
         51000
         52000
         53000
         54000
         55000
         56000
         57000
         58000
         59000
         60000
         61000
         62000
         63000
         64000
         65000
         66000
         67000
         68000
         69000
         70000
         71000
         72000
         73000
         74000
         75000
         76000
         77000
         78000
         79000
         80000
         81000
         82000
         83000
         84000
         85000
         86000
         87000
         88000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 748)
   (:y 92)
   (:w 41)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 709)
   (:y 57)
   (:w 55)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10800)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 682)
   (:y 90)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2100)
   (:id 8))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 471)
   (:y 379)
   (:w 285)
   (:h 176)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (650 300)) (:position (147 184)))
   (:edition-params
    (:staff :ggff)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 167 11.125)
      (:list 333 15.55)
      (:list 500 19.175)
      (:list 667 23.599999)
      (:list 833 27.224999)
      (:list 1000 30.849999)
      (:list 1167 34.475)
      (:list 1333 38.1)
      (:list 1500 41.725)
      (:list 1667 45.35)
      (:list 1833 48.975)
      (:list 2000 58.1))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 1999)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              2
              (:list
               (:list
                (:list 3 4)
                (:list
                 (:list 1 (:list 1 1 1 1))
                 (:list 1 (:list 1 1 1 1))
                 (:list 1 (:list 1 1 1 1))))
               (:list (:list 3 4) (:list -3)))))
            (:lmidic
             (:list
              (:list 7600)
              (:list 4400)
              (:list 3700)
              (:list 3600)
              (:list 5100)
              (:list 5700)
              (:list 2200)
              (:list 2300)
              (:list 4200)
              (:list 4100)
              (:list 7400)
              (:list 4300)))
            (:lonset
             (:list
              0
              167
              333
              500
              667
              833
              1000
              1167
              1333
              1500
              1667
              1833
              4000))
            (:ldur
             (:list
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)
              (:list 166)
              (:list 165)
              (:list 166)))
            (:lvel (:list 100))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 9))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 703)
   (:y 126)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 2100)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10800)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 578)
   (:y 254)
   (:w 66)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/16)))
   (:id 11))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 537)
   (:y 296)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 12)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 3 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 3)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 5 :out 1)) (:to (:box 12 :in 8)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 7)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 1)))))