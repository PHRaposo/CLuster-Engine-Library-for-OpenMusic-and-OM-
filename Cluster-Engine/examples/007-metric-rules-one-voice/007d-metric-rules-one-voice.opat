
(:patch
 (:name "007d-metric-rules-one-voice")
 (:doc "")
 (:info
  (:created "2021/07/12 22:42:59")
  (:modified "2021/07/12 22:46:02")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1282 590)) (:position (63 69)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (105 115)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 240)
       (:y 47)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 0))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 177)
       (:y 98)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 163)
       (:y 176)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 96)
       (:y 18)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "internal-patch2")
   (:x 730)
   (:y 36)
   (:w 122)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 13")
   (:x 958)
   (:y 189)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/8)
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 12")
   (:x 929)
   (:y 165)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 3))
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 11")
   (:x 894)
   (:y 142)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 6 8))
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 10")
   (:x 819)
   (:y 142)
   (:w 70)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3 4))
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 9")
   (:x 793)
   (:y 174)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 4 4))
   (:id 5))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "METRICDOMAIN" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "metricdomain")
   (:x 846)
   (:y 230)
   (:w 112)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TIMESIGN1")
     (:value (:list 4 4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TUPLETS1")
     (:value (:list 1 2 3 4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALT-BEATLENGTH1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "timesign2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "tuplets2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "alt-beatlength2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMETER-NOTE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmeter-note")
   (:x 736)
   (:y 114)
   (:w 104)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-STRUCTURE")
     (:value :1st-beat)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE1")
     (:value :offset)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE2")
     (:value :norm)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMETER-NOTE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmeter-note")
   (:x 591)
   (:y 114)
   (:w 104)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RULE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-STRUCTURE")
     (:value :beats)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE1")
     (:value :offset_dur_pitch_meter)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INPUT-MODE2")
     (:value :norm)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "internal-patch1")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (84 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 154)
       (:y 168)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 6 8))
       (:id 0))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 130)
       (:y 200)
       (:w 67)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference fourth)
       (:group-id nil)
       (:name "fourth")
       (:x 113)
       (:y 98)
       (:w 71)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference third)
       (:group-id nil)
       (:name "third")
       (:x 220)
       (:y 96)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 272)
       (:y 202)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 294)
       (:y 168)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6700)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 230)
       (:y 169)
       (:w 36)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 6))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 202)
       (:y 201)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 124)
       (:y 265)
       (:w 230)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 205)
       (:y 332)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 227)
       (:y 14)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "internal-patch1")
   (:x 564)
   (:y 34)
   (:w 122)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 9))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RMETRIC-HIERARCHY" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rmetric-hierarchy")
   (:x 427)
   (:y 107)
   (:w 132)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICES")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULE-MODE")
     (:value :durations)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "RULES-TO-CLUSTER" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "rules-to-cluster")
   (:x 581)
   (:y 167)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rules?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:library "Cluster-Engine")
   (:type :function)
   (:reference (:symbol "CLUSTER-ENGINE" "CLUSTER-ENGINE"))
   (:group-id nil)
   (:name "cluster-engine")
   (:x 725)
   (:y 339)
   (:w 116)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NO-OF-VARIABLES")
     (:value 21)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RND?")
     (:value t)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEBUG?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RULES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 90)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OUTPUT")
     (:value :voices)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "METRIC-DOMAIN")
     (:value (:list (:list 4 4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHYTHMDOMAIN0")
     (:value (:list (:list 1/4)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PITCHDOMAIN0")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 900)
   (:y 274)
   (:w 161)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 1/12) (:list 1/16) (:list 1/8) (:list 1/4)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 1149)
   (:y 172)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 1112)
   (:y 145)
   (:w 48)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7900)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 1089)
   (:y 170)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 16))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 1101)
   (:y 290)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 1072)
   (:y 238)
   (:w 54)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 1102)
   (:y 202)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 7900)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :object)
   (:reference poly)
   (:group-id nil)
   (:name "POLY")
   (:x 461)
   (:y 402)
   (:w 787)
   (:h 75)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value
      (:list
       (:object
        (:class voice)
        (:slots
         ((:onset 0)
          (:duration 3999)
          (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
          (:name nil)
          (:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:group-ids nil)
          (:tree (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
          (:lmidic (:list 6000))
          (:lonset (:list 0 1000 2000 3000 4000))
          (:ldur (:list 999))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:lchan (:list 1))
          (:lport (:list nil))
          (:llegato nil)
          (:tempo 60))))))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 667 13.0)
      (:list 1333 19.3)
      (:list 2000 34.8)
      (:list 2333 39.05)
      (:list 2500 42.675)
      (:list 2667 46.3)
      (:list 2833 49.925)
      (:list 3333 54.8)
      (:list 3500 59.675)
      (:list 4000 64.55)
      (:list 4167 69.425)
      (:list 4500 73.675)
      (:list 4667 83.3)
      (:list 5000 87.55)
      (:list 5333 91.8)
      (:list 5667 96.05)
      (:list 6000 100.3)
      (:list 6667 105.8)
      (:list 7333 121.3)
      (:list 7667 125.55)
      (:list 8333 131.05)
      (:list 8667 135.3)
      (:list 9333 150.8)
      (:list 9556 154.63333)
      (:list 10000 159.3)
      (:list 10222 163.46668)
      (:list 10667 168.13335))))
   (:value
    (:object
     (:class poly)
     (:slots
      ((:chord-seqs
        (:list
         (:object
          (:class voice)
          (:slots
           ((:onset 0)
            (:duration 10221)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:name nil)
            (:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:extras nil)
            (:group-ids nil)
            (:tree
             (:list
              9/2
              (:list
               (:list (:list 6 8) (:list 2 2 2))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 2 1 1))
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 1.0 3))
                 (:list 1 (:list 1.0 2 1))))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 1))
                 (:list 1 (:list 1.0 1))
                 1
                 1))
               (:list (:list 6 8) (:list 1 2 1 2))
               (:list
                (:list 4 4)
                (:list
                 (:list 1 (:list 1 2))
                 (:list 1 (:list 1.0 -2))
                 -2)))))
            (:lmidic
             (:list
              (:list 6000)
              (:list 6000)
              (:list 7500)
              (:list 6700)
              (:list 7200)
              (:list 6700)
              (:list 6700)
              (:list 6700)
              (:list 7200)
              (:list 7700)
              (:list 6700)
              (:list 6700)
              (:list 7900)
              (:list 6700)
              (:list 6700)
              (:list 6000)
              (:list 6500)
              (:list 6000)
              (:list 7700)
              (:list 6700)
              (:list 6700)))
            (:lonset
             (:list
              0
              667
              1333
              2000
              2333
              2500
              2833
              3500
              4167
              4500
              4667
              5000
              5667
              6000
              6667
              7333
              7667
              8333
              8667
              9333
              9556
              12000))
            (:ldur
             (:list
              (:list 666)
              (:list 665)
              (:list 666)
              (:list 332)
              (:list 166)
              (:list 332)
              (:list 666)
              (:list 666)
              (:list 332)
              (:list 166)
              (:list 332)
              (:list 666)
              (:list 332)
              (:list 666)
              (:list 665)
              (:list 333)
              (:list 665)
              (:list 333)
              (:list 665)
              (:list 222)
              (:list 665)))
            (:lvel (:list 80))
            (:loffset (:list 0))
            (:lchan (:list 1))
            (:lport (:list nil))
            (:llegato nil)
            (:tempo 90))))))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)))))
   (:id 20))
  (:comment
   (:x 22)
   (:y 38)
   (:w 411)
   (:h 398)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "RULES ONE VOICE 9

METRIC RULES (cont.)

This example patch uses two rules based on the rmeter-note function. 

The second rule accesses the 1st beat in every measure and only restrict the offset to the duration to be 0, i.e. the first event in each measure has to start at the beat (open the internal-patch2 to see how it is done).

The first rule is set to pass offset, duration, pitch and meter at each beat to the internal patch. This only needs the information about pitch and meter. It restricts that IF the time signature is 
'(6 8), THEN the pitches of the events at each beat have to be a C4 (MIDICS 6000), ELSE (i.e. if the time signature is '(4 4) ) the pitches of the events at each beat have to be G4 (MIDICS 6700). Note that the metric-domain function is used when defining the metric structure, and that the beat length of the '(6 8) measures is 3/8 long.

The rmetric-hierarchy has already been discussed in the previous tutorials. Note that according to the definition in the metricdomain function in this example, the subdivision of the 3/8 long beat of the '(6 8) measures can be 1 part (= 3/8) or 3 parts (= 1/8).")
   (:id 21)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 5)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 4)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 3)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 6)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 2)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 7)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 19 :in 2)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 12 :in 8)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))))